version: 2.1
orbs:
  grype: anchore/grype@0.2.0

executors:
  base-executor:
    docker:
      - image: cimg/base:2023.05

jobs:
  build_bert_model:
    # resource_class: small # specify a resource class
    executor: base-executor
    steps:
      - checkout  
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            export DOCKER_BUILDKIT=1
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build --target final -t ghcr.io/kcirtapfromspace/cloudfoundry_circleci:$TAG -t ghcr.io/kcirtapfromspace/cloudfoundry_circleci:latest .
            echo $GITHUB_PAT | docker login ghcr.io -u $GITHUB_USERNAME --password-stdin
            docker push ghcr.io/kcirtapfromspace/cloudfoundry_circleci:$TAG 
            docker push ghcr.io/kcirtapfromspace/cloudfoundry_circleci:latest
      # - run:
      #     name: Syft Docker image
      #     command: |
      #       TAG="0.1.${CIRCLE_BUILD_NUM}"
      #       curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
      #       syft -vvv ghcr.io/kcirtapfromspace/cloudfoundry_circleci:$TAG

      # - run:
      #     name: Copy vendor folder from Docker image
      #     command: |
      #       export DOCKER_BUILDKIT=1
      #       mkdir -p /tmp/artifacts
      #       TAG="0.1.${CIRCLE_BUILD_NUM}"
      #       docker build --target artifact_build -t artifact_build_image:$TAG .
      #       docker create --name temp-container artifact_build_image:$TAG
      #       docker cp temp-container:/vendor /tmp/artifacts/vendor
      #       docker rm temp-container
      # - store_artifacts:
      #     path: /tmp/artifacts
      # - persist_to_workspace:
      #     root: /tmp/artifacts
      #     paths:
      #       - vendor
    list-container-vulnerabilities:
      executor: grype/default
      steps:
      - grype/scan-image:
          image-name: ghcr.io/kcirtapfromspace/cloudfoundry_circleci:0.1.${CIRCLE_BUILD_NUM} # grype will pull this image from docker.io, by default, check the scan-image command for more options 
          registry-address: ghcr.io
          fail-on-severity: high
          registry-user: $GITHUB_USERNAME
          registry-pass: $GITHUB_PAT

  deploy_cloud_foundry:
    executor: base-executor
    steps:
      - checkout
      - attach_workspace:
          at: src/bert
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Cloud Foundry
          command: |
            # ...first add the Cloud Foundry Foundation public key and package repository to your system
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            # ...then, update your local package index, then finally install the cf CLI
            sudo apt-get update
            sudo apt-get install cf8-cli
      - run:
          name: Login to Cloud Foundry
          command: |
            cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
      - run:
          name: Docker Deploy to Cloud Foundry
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            CF_DOCKER_PASSWORD=$GITHUB_PAT cf push Python_Bert \
              -k 7G \
              -m 5G \
              --docker-image ghcr.io/kcirtapfromspace/cloudfoundry_circleci:latest \
              --docker-username $GITHUB_USERNAME \
              --no-route \
              --no-start 


# Cron job to run every night at UTC (1am EST)\
  cron_task:
    executor: base-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Cloud Foundry
          command: |
            # ...first add the Cloud Foundry Foundation public key and package repository to your system
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            # ...then, update your local package index, then finally install the cf CLI
            sudo apt-get update
            sudo apt-get install cf8-cli
      - run:
          name: Login to Cloud Foundry
          command: |
            cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
      - run:
          name: Deploy to Cloud Foundry
          command: |
            cf run-task Python_Bert --start-command "python3 cleaned_bert_similarity.py"

      

workflows:
  build-test-and-deploy:
    jobs:
      - build_bert_model
      - deploy_cloud_foundry:
          requires:
            - build_bert_model
            - list-container-vulnerabilities
          filters:
            branches:
              only: main
