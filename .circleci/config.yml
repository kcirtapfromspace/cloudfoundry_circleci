version: 2.1

executors:
  base-executor:
    docker:
      - image: cimg/base:2023.05
        # auth:
        #   username: $GITHUB_USERNAME
        #   password: $GITHUB_PAT  # context / project UI env-var reference
    # working_directory: /tmp

jobs:
  build_bert_model:
    # resource_class: small # specify a resource class
    executor: base-executor
    steps:
      - checkout  
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            export DOCKER_BUILDKIT=1
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t ghcr.io/kcirtapfromspace/cloudfoundry_circleci:$TAG -t ghcr.io/kcirtapfromspace/cloudfoundry_circleci:latest .
            echo $GITHUB_PAT | docker login ghcr.io -u $GITHUB_USERNAME --password-stdin
            docker push ghcr.io/kcirtapfromspace/cloudfoundry_circleci:$TAG 
            docker push ghcr.io/kcirtapfromspace/cloudfoundry_circleci:latest
      - run:
          name: Copy vendor folder from Docker image
          command: |
            mkdir -p ~/artifacts
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker create --name temp-container ghcr.io/kcirtapfromspace/cloudfoundry_circleci:$TAG
            docker cp temp-container:/vendor ~/artifacts/vendor
            docker rm temp-container

  deploy_cloud_foundry:
    executor: base-executor

    steps:
      - checkout
      - attach_workspace:
          at: src/buildpack_deploy/bert
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Move vendor directory
          command: |
            mv ~/artifacts/vendor .
      - run:
          name: Install Cloud Foundry
          command: |
            # ...first add the Cloud Foundry Foundation public key and package repository to your system
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            # ...then, update your local package index, then finally install the cf CLI
            sudo apt-get update
            sudo apt-get install cf8-cli
      - run:
          name: Login to Cloud Foundry
          command: |
            cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
      - run:
          name: Deploy to Cloud Foundry
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            cf push py_bert \
              -m 3G \
              -k 4G \
              --no-route \
              --no-start 
      # - run:
      #     name: Docker Deploy to Cloud Foundry
      #     command: |
      #       TAG="0.1.${CIRCLE_BUILD_NUM}"
      #       CF_DOCKER_PASSWORD=$GITHUB_PAT cf push Python_Bert \
      #         -k 4G \
      #         --docker-image ghcr.io/kcirtapfromspace/cloudfoundry_circleci:latest \
      #         --docker-username $GITHUB_USERNAME \
      #         --no-route \
      #         --no-start 


# Cron job to run every night at UTC (1am EST)\
  cron_task:
    executor: base-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Cloud Foundry
          command: |
            # ...first add the Cloud Foundry Foundation public key and package repository to your system
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            # ...then, update your local package index, then finally install the cf CLI
            sudo apt-get update
            sudo apt-get install cf8-cli
      - run:
          name: Login to Cloud Foundry
          command: |
            cf login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
      - run:
          name: Deploy to Cloud Foundry
          command: |
            cf run-task Python_Bert --start-command "python3 cleaned_bert_similarity.py"


      # - run:
      #     name: Check deployed app
      #     command: |
      #       curl -s -o /dev/null -w "%{http_code}" https://cloudfoundry-circleci.cfapps.io/
      # - run:  
      #     name: Delete old app
      #     command: |
      #       cf delete -f cloudfoundry-circleci-old
      

workflows:
  build-test-and-deploy:
    jobs:
      - build_bert_model
      - deploy_cloud_foundry:
          requires:
            - build_bert_model
          filters:
            branches:
              only: main
